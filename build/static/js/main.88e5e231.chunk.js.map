{"version":3,"sources":["components/Navbars/Navbar.js","components/Footer/Footer.js","components/SiteSonar/SearchField.js","components/SiteSonar/SearchBox.js","components/SiteSonar/ResultBox.js","components/SiteSonar/LastRunData.js","components/SiteSonar/SearchQuery.js","components/SiteSonar/SearchForm.js","views/Dashboard.js","layouts/Admin.js","routes.js","index.js"],"names":["Header","Navbar","color","expand","className","Container","fluid","NavbarBrand","href","Footer","props","default","Row","Date","getYear","SearchField","useState","SearchKeys","setSearchKeys","getSearchKeysUrl","process","useEffect","a","Run","RunId","axios","post","res","data","JSON","parse","keys","s_key","push","value","label","index","idx","updateChildSearchKeys","getSearchKeys","query_key","query_value","variable_name","String","fromCharCode","InputGroup","key","InputGroupText","htmlFor","style","marginLeft","marginTop","marginBottom","width","marginRight","options","data-id","data-key","id","onChange","item","event","handleSearchKeyFieldChange","Input","type","name","handleSearchValueFieldChange","placeholder","required","background","borderRadius","SearchBox","BackendSitesUrl","Sites","setSites","InitialLoad","setInitialLoad","ResultReceived","setResultReceived","get","site_array","site","site_id","site_name","getSites","BackendUrl","SiteIdValue","setSiteIdValue","EquationState","setEquationState","singularityExists","forEach","SearchKey","SearchFormInput","SiteId","SearchFields","A","Equation","then","showSearchQuery","storeSearchResults","searchSingularity","BlankSearchField","SearchFieldState","setSearchFieldState","updatedSearchField","target","dataset","trim","EquationRegex","CharacterRegex","onSubmit","preventDefault","NumElements","Object","length","toUpperCase","letter","test","charCodeAt","alert","KeyMap","i","NewKey","RenamedSearchFieldState","obj","newKeys","keyValues","map","assign","renameKeys","margin","val","display","Button","backgroundColor","onClick","list","splice","disabled","Spinner","as","animation","size","role","aria-hidden","hidden","ResultBox","createSitesCSV","results","items","searchData","matching_sites_list","constructor","unmatching_sites_list","incomplete_sites_list","createNodesCSVData","matching_nodes_data","getMatchingKeys","paramKeys","nodename","node","params","paramName","unmatching_nodes_data","getUnmatchingKeys","createNodesCSVHeaders","headers","RenderRow","paramNames","bgcolor","Table","border","RenderSubRow","RenderSiteRow","sitename","state","showResult","GridSearch","Col","lg","md","sm","Card","CardBody","xs","CardTitle","tag","total_sites","CardFooter","covered_sites","matching_sites","Math","round","filename","raised","bordered","getMatchingSites","getUnmatchingSites","getIncompleteSites","total_nodes","covered_nodes","matching_nodes","getMatchingRowsData","getUnmatchingRowsData","LastRunDiv","BackendRunsUrl","RunSummary","setRunSummary","element","handleRunChange","all_runs","run_array","run_id","finished_at","getRuns","handleRunSelection","SelectedRun","fontSize","started_at","SearchQuery","equation","SearchForm","ShowResult","SearchResults","Result","setSearchResult","SearchEquation","setSearchEquation","AllRuns","setAllRuns","selected_run","setSelectedRun","all_runs_array","replace","Dashboard","ps","routes","path","icon","component","layout","React","Component","super","handleActiveClick","this","setState","activeColor","handleBgClick","mainPanel","createRef","componentDidMount","navigator","platform","indexOf","PerfectScrollbar","current","document","body","classList","toggle","componentWillUnmount","destroy","componentDidUpdate","e","history","action","scrollTop","scrollingElement","render","ref","prop","hist","createBrowserHistory","ReactDOM","Admin","getElementById"],"mappings":"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","file":"static/js/main.88e5e231.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\nimport { Navbar, NavbarBrand, Container } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar\n      color=\"transparent\"\n      expand=\"lg\"\n      className=\"navbar-absolute fixed-top navbar-transparent\"\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <NavbarBrand href=\"/\">\n            Site Sonar - WLCG Configuration Monitoring Tool\n          </NavbarBrand>\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nconst Footer = (props) => {\n  return (\n    <footer className={\"footer\" + (props.default ? \" footer-default\" : \"\")}>\n      <Container fluid={props.fluid ? true : false}>\n        <Row>\n          <div className=\"credits ml-auto\">\n            <div className=\"copyright\">\n              &copy; {1900 + new Date().getYear()}, Created by JAliEn Team\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { InputGroup, InputGroupText, Input } from \"reactstrap\";\n\nimport Select from \"react-select\";\nimport axios from \"axios\";\n\nconst SearchField = (props) => {\n  const [SearchKeys, setSearchKeys] = useState([]);\n  const getSearchKeysUrl = `${process.env.REACT_APP_BACKEND_URL}/search_keys`;\n\n  useEffect(() => {\n    async function getSearchKeys() {\n      const Run = {\n        RunId: props.RunId,\n      };\n      if (Run.RunId) {\n        const res = await axios.post(getSearchKeysUrl, { Run });\n        const data = JSON.parse(res.data);\n        const keys = [];\n        for (let s_key of data) {\n          keys.push({ value: s_key, label: s_key, index: props.idx });\n        }\n        setSearchKeys([...keys]);\n        props.updateChildSearchKeys([...keys]);\n      }\n    }\n    getSearchKeys();\n  }, [props.RunId]);\n\n  const query_key = `query_key_input_${props.idx}`;\n  const query_value = `query_value_${props.idx}`;\n  const variable_name = String.fromCharCode(props.idx + 65);\n  return (\n    <InputGroup className=\"no-border\" key={`query_field_${props.idx}`}>\n      <InputGroupText\n        htmlFor=\"variable_name\"\n        style={{ marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n      >\n        {variable_name}\n      </InputGroupText>\n      <div\n        style={{\n          width: \"50%\",\n          marginTop: \"10px\",\n          marginBottom: \"10px\",\n          marginRight: \"10px\",\n        }}\n      >\n        <Select\n          options={SearchKeys}\n          data-id={props.idx}\n          data-key=\"query_key\"\n          id={query_key}\n          onChange={(item, event) =>\n            props.handleSearchKeyFieldChange(item, event)\n          }\n        />\n      </div>\n\n      <Input\n        type=\"text\"\n        name={query_value}\n        data-id={props.idx}\n        data-key=\"query_value\"\n        id={query_value}\n        className=\"query\"\n        onChange={props.handleSearchValueFieldChange}\n        placeholder=\"Enter search parameter value\"\n        required\n        style={{\n          background: \"#ffffff\",\n          marginTop: \"10px\",\n          marginBottom: \"10px\",\n          marginRight: \"10px\",\n          borderRadius: \"5px\",\n        }}\n      />\n    </InputGroup>\n  );\n};\n\nSearchField.propTypes = {\n  idx: PropTypes.number,\n  RunId: PropTypes.number,\n  handleSearchKeyFieldChange: PropTypes.func,\n  handleSearchValueFieldChange: PropTypes.func,\n  updateChildSearchKeys: PropTypes.func,\n};\n\nexport default SearchField;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputGroup, InputGroupText, Input, Button, Spinner } from \"reactstrap\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport SearchField from \"./SearchField.js\";\n\nconst SearchBox = (props) => {\n  const BackendSitesUrl = `${process.env.REACT_APP_BACKEND_URL}/all_sites`;\n\n  const [Sites, setSites] = useState([]);\n  const [InitialLoad, setInitialLoad] = useState(false);\n  const [ResultReceived, setResultReceived] = useState(false);\n\n  useEffect(() => {\n    async function getSites() {\n      const res = await axios.get(BackendSitesUrl);\n      const data = res.data;\n      const site_array = [];\n      site_array.push({ value: \"all\", label: \"All Sites\" });\n      for (let site of data) {\n        site_array.push({ value: site.site_id, label: site.site_name });\n      }\n      setSites([...site_array]);\n    }\n    getSites();\n  }, []);\n\n  const BackendUrl = `${process.env.REACT_APP_BACKEND_URL}/search_site`;\n  const [SiteIdValue, setSiteIdValue] = useState(\"1\");\n\n  const [EquationState, setEquationState] = useState(\"\");\n\n  const updateChildSearchKeys = (keys) => {\n    async function searchSingularity() {\n      const singularityExists = false;\n      keys.forEach((SearchKey) => {\n        if (SearchKey[\"value\"] === \"Singularity\") {\n          singularityExists = true;\n        }\n      });\n      if (singularityExists) {\n        setResultReceived(true);\n        const SearchFormInput = {\n          SiteId: \"all\",\n          SearchFields: {\n            A: { query_key: \"Singularity\", query_value: \"SUPPORTED\" },\n          },\n          Equation: \"A\",\n          RunId: props.RunId,\n        };\n        axios.post(BackendUrl, { SearchFormInput }).then((res) => {\n          props.showSearchQuery(SearchFormInput);\n          setResultReceived(false);\n          props.storeSearchResults(res.data);\n        });\n      }\n      setInitialLoad(true);\n    }\n    if (!InitialLoad) {\n      searchSingularity();\n    }\n  };\n\n  const handleSiteIdChange = (item) => {\n    setSiteIdValue(item.value);\n  };\n\n  const handleEquationChange = (event) => {\n    setEquationState(event.target.value);\n  };\n\n  const BlankSearchField = { query_key: \"\", query_value: \"\" };\n  const [SearchFieldState, setSearchFieldState] = useState([\n    { ...BlankSearchField },\n  ]);\n\n  const addSearchField = (event) => {\n    setSearchFieldState([...SearchFieldState, { ...BlankSearchField }]);\n  };\n\n  const removeSearchField = (event) => {\n    const list = [...SearchFieldState];\n    list.splice(-1, 1);\n    setSearchFieldState(list);\n  };\n\n  const handleSearchKeyFieldChange = (item, event) => {\n    const updatedSearchField = [...SearchFieldState];\n    updatedSearchField[item.index][\"query_key\"] = item.value;\n    setSearchFieldState(updatedSearchField);\n  };\n\n  const handleSearchValueFieldChange = (event) => {\n    const updatedSearchField = [...SearchFieldState];\n    updatedSearchField[event.target.dataset.id][\n      event.target.dataset.key\n    ] = event.target.value.trim();\n    setSearchFieldState(updatedSearchField);\n  };\n\n  function renameKeys(obj, newKeys) {\n    const keyValues = Object.keys(obj).map((key) => {\n      const newKey = newKeys[key] || key;\n      return { [newKey]: obj[key] };\n    });\n    return Object.assign({}, ...keyValues);\n  }\n\n  const EquationRegex = /([A-Z]|\\(|\\)|&|~|\\|| )/;\n  const CharacterRegex = /([A-Z])/;\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    setResultReceived(true);\n    let NumElements = Object.keys(SearchFieldState).length;\n    let Equation = EquationState.trim().toUpperCase();\n    for (let letter of Equation) {\n      if (CharacterRegex.test(letter)) {\n        // check letter in range of variables\n        if (letter.charCodeAt(0) - 65 >= NumElements) {\n          alert(\"Equation contain invalid letters for identifiers\");\n          setResultReceived(false);\n          return;\n        }\n      } else if (!EquationRegex.test(letter)) {\n        alert(\n          \"Equation contains invalid characters. Only valid characters are [&,|,~,(,)]\"\n        );\n        setResultReceived(false);\n        return;\n      }\n    }\n    let KeyMap = {};\n    for (let i = 0; i < Object.keys(SearchFieldState).length; i++) {\n      let NewKey = String.fromCharCode(65 + i);\n      KeyMap[i] = NewKey;\n    }\n\n    let RenamedSearchFieldState = renameKeys(SearchFieldState, KeyMap);\n\n    const SearchFormInput = {\n      SiteId: SiteIdValue,\n      SearchFields: RenamedSearchFieldState,\n      Equation: Equation,\n      RunId: props.RunId,\n    };\n    axios.post(BackendUrl, { SearchFormInput }).then((res) => {\n      props.showSearchQuery(SearchFormInput);\n      setResultReceived(false);\n      props.storeSearchResults(res.data);\n    });\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={handleFormSubmit}\n        style={{ background: \"#282C2C\", margin: \"10px\", borderRadius: \"5px\" }}\n      >\n        <InputGroup className=\"no-border\">\n          <InputGroupText\n            htmlFor=\"site_id\"\n            style={{\n              marginLeft: \"10px\",\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n            }}\n          >\n            Site ID\n          </InputGroupText>\n          <div\n            style={{ width: \"50%\", marginTop: \"10px\", marginBottom: \"10px\" }}\n          >\n            <Select options={Sites} onChange={handleSiteIdChange} />\n          </div>\n        </InputGroup>\n        {SearchFieldState.map((val, idx) => (\n          <SearchField\n            key={`query-${idx}`}\n            idx={idx}\n            handleSearchKeyFieldChange={handleSearchKeyFieldChange}\n            handleSearchValueFieldChange={handleSearchValueFieldChange}\n            updateChildSearchKeys={updateChildSearchKeys}\n            RunId={props.RunId}\n          />\n        ))}\n        <InputGroup>\n          <InputGroupText\n            htmlFor=\"equation\"\n            style={{\n              marginLeft: \"10px\",\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n            }}\n          >\n            Equation\n          </InputGroupText>\n          <Input\n            type=\"text\"\n            name=\"equation\"\n            id=\"equation\"\n            onChange={handleEquationChange}\n            required\n            placeholder=\"Enter equation\"\n            style={{\n              background: \"#ffffff\",\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n              marginRight: \"10px\",\n              borderRadius: \"5px\",\n            }}\n          />\n        </InputGroup>\n        <InputGroup style={{ display: \"flex\" }}>\n          <Button\n            type=\"button\"\n            className=\"btn btn-primary float-left\"\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n              marginLeft: \"10px\",\n              backgroundColor: \"#0F709B\",\n            }}\n            onClick={addSearchField}\n          >\n            Add Filter\n          </Button>\n          <Button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n              backgroundColor: \"#0F709B\",\n            }}\n            onClick={removeSearchField}\n          >\n            Remove Filter\n          </Button>\n          <Button\n            type=\"submit\"\n            value=\"Submit\"\n            disabled={ResultReceived}\n            style={{ backgroundColor: \"#60C73C\" }}\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"grow\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              color=\"yellow\"\n              hidden={!ResultReceived}\n            />\n            Search\n          </Button>\n        </InputGroup>\n      </form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  storeSearchResults: PropTypes.func,\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\n\nimport { CSVLink } from \"react-csv\";\n\nconst ResultBox = (props) => {\n  const createSitesCSV = () => {\n    const results = [[\"Site Name\", \"State\"]];\n    var items = props.searchData.matching_sites_list;\n    var keys = Object.keys(props.searchData.matching_sites_list);\n\n    if (!(Object.keys(items).length === 0 && items.constructor === Object)) {\n      keys.map((key) => {\n        results.push([items[key], \"SUPPORTED\"]);\n      });\n    }\n\n    items = props.searchData.unmatching_sites_list;\n    keys = Object.keys(props.searchData.unmatching_sites_list);\n\n    if (!(Object.keys(items).length === 0 && items.constructor === Object)) {\n      keys.map((key) => {\n        results.push([items[key], \"NOT SUPPORTED\"]);\n      });\n    }\n\n    items = props.searchData.incomplete_sites_list;\n    keys = Object.keys(props.searchData.incomplete_sites_list);\n\n    if (!(Object.keys(items).length === 0 && items.constructor === Object)) {\n      keys.map((key) => {\n        results.push([items[key], \"N/A\"]);\n      });\n    }\n    return results;\n  };\n\n  const createNodesCSVData = () => {\n    var items = props.searchData.matching_nodes_data;\n    var keys = getMatchingKeys();\n\n    var results = [];\n    if (!(Object.keys(items).length === 0 && items.constructor === Object)) {\n      const paramKeys = Object.keys(items[keys[0]]);\n      keys.map((nodename) => {\n        const node = {};\n        node[\"nodename\"] = nodename;\n        const params = {};\n        paramKeys.map((paramName) => {\n          params[paramName] = items[nodename][paramName];\n        });\n        node[\"params\"] = params;\n        node[\"supported\"] = \"SUPPORTED\";\n        results.push(node);\n      });\n    }\n\n    items = props.searchData.unmatching_nodes_data;\n    keys = getUnmatchingKeys();\n\n    if (!(Object.keys(items).length === 0 && items.constructor === Object)) {\n      var paramKeys = Object.keys(items[keys[0]]);\n      keys.map((nodename) => {\n        const node = {};\n        node[\"nodename\"] = nodename;\n        const params = {};\n        paramKeys.map((paramName) => {\n          params[paramName] = items[nodename][paramName];\n        });\n        node[\"params\"] = params;\n        node[\"supported\"] = \"NOT SUPPORTED\";\n        results.push(node);\n      });\n    }\n    return results;\n  };\n\n  const createNodesCSVHeaders = () => {\n    const results = createNodesCSVData();\n    const headers = [{ label: \"Node Name\", key: \"nodename\" }];\n    if (!(results.length == null || results.length === 0)) {\n      var paramNames = Object.keys(results[0][\"params\"]);\n      paramNames.map((paramName) => {\n        headers.push({ label: paramName, key: \"params.\" + paramName });\n      });\n      headers.push({ label: \"Supported\", key: \"supported\" });\n\n      return headers;\n    }\n  };\n\n  const getMatchingKeys = () => {\n    return Object.keys(props.searchData.matching_nodes_data);\n  };\n\n  const getUnmatchingKeys = () => {\n    return Object.keys(props.searchData.unmatching_nodes_data);\n  };\n\n  const RenderRow = (props) => {\n    if (props.params) {\n      const paramNames = Object.keys(props.params);\n      return (\n        <tr bgcolor={props.color}>\n          <td key={props.nodename}>\n            <strong>{props.nodename}</strong>\n          </td>\n          <td>\n            <Table border=\"1px\" style={{ color: \"white\" }}>\n              <tbody>\n                <RenderSubRow\n                  paramNames={paramNames}\n                  params={props.params}\n                ></RenderSubRow>\n              </tbody>\n            </Table>\n          </td>\n        </tr>\n      );\n    } else {\n      return <tr></tr>;\n    }\n  };\n\n  const RenderSubRow = (props) => {\n    return props.paramNames.map((paramName, index) => {\n      return (\n        <tr key={index}>\n          <td>\n            <strong>{paramName}</strong>\n          </td>\n          <td>\n            <strong>{props.params[paramName]}</strong>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const getMatchingRowsData = () => {\n    var items = props.searchData.matching_nodes_data;\n    var keys = getMatchingKeys();\n\n    return keys.map((key, index) => {\n      return (\n        <RenderRow\n          key={index}\n          nodename={key}\n          params={items[key]}\n          color=\"green\"\n        />\n      );\n    });\n  };\n\n  const getUnmatchingRowsData = () => {\n    var items = props.searchData.unmatching_nodes_data;\n    var keys = getUnmatchingKeys();\n    return keys.map((key, index) => {\n      return (\n        <RenderRow key={index} nodename={key} params={items[key]} color=\"red\" />\n      );\n    });\n  };\n\n  const RenderSiteRow = (props) => {\n    return (\n      <tr bgcolor={props.color}>\n        <td key={props.sitename}>\n          <strong>{props.sitename}</strong>\n        </td>\n        <td>\n          <strong>{props.state}</strong>\n        </td>\n      </tr>\n    );\n  };\n  const getMatchingSites = () => {\n    var items = props.searchData.matching_sites_list;\n    var keys = Object.keys(props.searchData.matching_sites_list);\n    return keys.map((key, index) => {\n      return (\n        <RenderSiteRow\n          key={index}\n          sitename={items[key]}\n          color=\"green\"\n          state=\"Supported\"\n        />\n      );\n    });\n  };\n\n  const getUnmatchingSites = () => {\n    var items = props.searchData.unmatching_sites_list;\n    var keys = Object.keys(props.searchData.unmatching_sites_list);\n    return keys.map((key, index) => {\n      return (\n        <RenderSiteRow\n          key={index}\n          sitename={items[key]}\n          color=\"red\"\n          state=\"Not Supported\"\n        />\n      );\n    });\n  };\n\n  const getIncompleteSites = () => {\n    var items = props.searchData.incomplete_sites_list;\n    var keys = Object.keys(props.searchData.incomplete_sites_list);\n    return keys.map((key, index) => {\n      return (\n        <RenderSiteRow\n          key={index}\n          sitename={items[key]}\n          color=\"orange\"\n          state=\"N/A\"\n        />\n      );\n    });\n  };\n\n  if (props.showResult) {\n    if (props.GridSearch) {\n      return (\n        <div>\n          <div>\n            <Row>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-globe text-warning\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Total Grid Sites</p>\n                          <CardTitle tag=\"p\">\n                            {props.searchData.total_sites}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-money-coins text-success\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Sites Covered</p>\n                          <CardTitle tag=\"p\">\n                            {props.searchData.covered_sites}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-vector text-danger\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Matching Sites</p>\n                          <CardTitle tag=\"p\">\n                            {props.searchData.matching_sites}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Percentage</p>\n                          <CardTitle tag=\"p\">\n                            {Math.round(\n                              (props.searchData.matching_sites /\n                                props.searchData.covered_sites) *\n                                100\n                            )}\n                            %\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n          <div>\n            <div>\n              <CSVLink\n                data={createSitesCSV()}\n                filename={\"site-sonar-sites.csv\"}\n              >\n                <Button\n                  className=\"btn btn-primary\"\n                  raised=\"true\"\n                  color=\"primary\"\n                >\n                  Export Results\n                </Button>\n              </CSVLink>\n            </div>\n            <Table bordered style={{ color: \"white\" }}>\n              <thead bgcolor=\"#282C2C\">\n                <tr>\n                  <th key=\"sitename\">Site Name</th>\n                  <th key=\"state\">State</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMatchingSites()}\n                {getUnmatchingSites()}\n                {getIncompleteSites()}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div>\n            <Row>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-globe text-warning\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Total Nodes</p>\n                          <CardTitle tag=\"p\">\n                            ~{props.searchData.total_nodes}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-money-coins text-success\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Nodes Covered</p>\n                          <CardTitle tag=\"p\">\n                            {props.searchData.covered_nodes}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-vector text-danger\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Matching Nodes</p>\n                          <CardTitle tag=\"p\">\n                            {props.searchData.matching_nodes}\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col lg=\"3\" md=\"6\" sm=\"6\">\n                <Card className=\"card-stats\">\n                  <CardBody>\n                    <Row>\n                      <Col md=\"4\" xs=\"5\">\n                        <div className=\"icon-big text-center icon-warning\">\n                          <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                        </div>\n                      </Col>\n                      <Col md=\"8\" xs=\"7\">\n                        <div className=\"numbers\">\n                          <p className=\"card-category\">Percentage</p>\n                          <CardTitle tag=\"p\">\n                            {Math.round(\n                              (props.searchData.matching_nodes /\n                                props.searchData.covered_nodes) *\n                                100\n                            )}\n                            %\n                          </CardTitle>\n                          <p />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <hr />\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n          <div>\n            <div>\n              <CSVLink\n                data={createNodesCSVData()}\n                headers={createNodesCSVHeaders()}\n                filename={\"site-sonar-nodes.csv\"}\n              >\n                <Button\n                  className=\"btn btn-primary\"\n                  raised=\"true\"\n                  color=\"primary\"\n                >\n                  Export Results\n                </Button>\n              </CSVLink>\n            </div>\n            <Table bordered style={{ color: \"white\" }}>\n              <thead bgcolor=\"#282C2C\">\n                <tr>\n                  <th key=\"nodename\">Node Name</th>\n                  <th key=\"params\">Parameters</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMatchingRowsData()}\n                {getUnmatchingRowsData()}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      );\n    }\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default ResultBox;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupText,\n} from \"reactstrap\";\n\nimport Select from \"react-select\";\n\nconst LastRunDiv = (props) => {\n  const BackendRunsUrl = `${process.env.REACT_APP_BACKEND_URL}/all_runs`;\n\n  const [RunSummary, setRunSummary] = useState([]);\n\n  const handleRunSelection = (item) => {\n    props.handleRunSelection(item.value);\n  };\n\n  useEffect(() => {\n    async function getRuns() {\n      const res = await axios.get(BackendRunsUrl);\n\n      props.handleRunChange(res.data);\n\n      const all_runs = res.data.all_runs;\n      const run_array = [];\n      for (const element in all_runs) {\n        run_array.push({\n          value: all_runs[element].run_id,\n          label: `ID: ${all_runs[element].run_id}, Finished at: ${all_runs[element].finished_at}`,\n        });\n      }\n      setRunSummary([...run_array]);\n    }\n    getRuns();\n  }, []);\n\n  return (\n    <div>\n      <Row>\n        <InputGroup className=\"no-border\">\n          <InputGroupText htmlFor=\"run_id\">Run ID</InputGroupText>\n          <div style={{ width: \"50%\" }}>\n            <Select\n              options={RunSummary}\n              onChange={handleRunSelection}\n              placeholder=\"Change Run Id\"\n            />\n          </div>\n        </InputGroup>\n      </Row>\n      <Row>\n        <Col lg=\"3\" md=\"6\" sm=\"6\">\n          <Card className=\"card-stats\">\n            <CardBody>\n              <Row>\n                <Col md=\"4\" xs=\"5\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <i className=\"nc-icon nc-globe text-warning\" />\n                  </div>\n                </Col>\n                <Col md=\"8\" xs=\"7\">\n                  <div className=\"numbers\">\n                    <p className=\"card-category\">Run Id</p>\n                    <CardTitle tag=\"p\">{props.SelectedRun.run_id}</CardTitle>\n                    <p />\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <hr />\n            </CardFooter>\n          </Card>\n        </Col>\n        <Col lg=\"3\" md=\"6\" sm=\"6\">\n          <Card className=\"card-stats\">\n            <CardBody>\n              <Row>\n                <Col md=\"4\" xs=\"5\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <i className=\"nc-icon nc-money-coins text-success\" />\n                  </div>\n                </Col>\n                <Col md=\"8\" xs=\"7\">\n                  <div className=\"numbers\">\n                    <p className=\"card-category\">Started At</p>\n                    <CardTitle tag=\"p\" style={{ fontSize: 15 }}>\n                      {props.SelectedRun.started_at}\n                    </CardTitle>\n                    <p />\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <hr />\n            </CardFooter>\n          </Card>\n        </Col>\n        <Col lg=\"3\" md=\"6\" sm=\"6\">\n          <Card className=\"card-stats\">\n            <CardBody>\n              <Row>\n                <Col md=\"4\" xs=\"5\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <i className=\"nc-icon nc-vector text-danger\" />\n                  </div>\n                </Col>\n                <Col md=\"8\" xs=\"7\">\n                  <div className=\"numbers\">\n                    <p className=\"card-category\">Finished At</p>\n                    <CardTitle tag=\"p\" style={{ fontSize: 15 }}>\n                      {props.SelectedRun.finished_at}\n                    </CardTitle>\n                    <p />\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <hr />\n            </CardFooter>\n          </Card>\n        </Col>\n        <Col lg=\"3\" md=\"6\" sm=\"6\">\n          <Card className=\"card-stats\">\n            <CardBody>\n              <Row>\n                <Col md=\"4\" xs=\"5\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                  </div>\n                </Col>\n                <Col md=\"8\" xs=\"7\">\n                  <div className=\"numbers\">\n                    <p className=\"card-category\">State</p>\n                    <CardTitle tag=\"p\" style={{ fontSize: 18 }}>\n                      {props.SelectedRun.state}\n                    </CardTitle>\n                    <p />\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <hr />\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default LastRunDiv;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputGroup, InputGroupText } from \"reactstrap\";\n\nconst SearchQuery = (props) => {\n  return (\n    <div style={{ background: \"#282C2C\", margin: \"10px\", borderRadius: \"5px\" }}>\n      <InputGroup>\n        <h3\n          htmlFor=\"equation-label\"\n          style={{\n            margin: \"auto\",\n            marginTop: \"10px\",\n            color: \"white\",\n          }}\n        >\n          Search Results for...\n        </h3>\n      </InputGroup>\n      <InputGroup>\n        <InputGroupText\n          htmlFor=\"equation\"\n          hidden={props.hidden}\n          style={{\n            margin: \"auto\",\n            marginBottom: \"10px\",\n          }}\n        >\n          {props.equation}\n        </InputGroupText>\n      </InputGroup>\n    </div>\n  );\n};\n\nSearchQuery.propTypes = {\n  equation: PropTypes.string,\n};\n\nexport default SearchQuery;\n","import React, { useState } from \"react\";\n\nimport SearchBox from \"./SearchBox.js\";\nimport ResultBox from \"./ResultBox\";\nimport LastRunDiv from \"./LastRunData.js\";\nimport SearchQuery from \"./SearchQuery.js\";\n\nconst SearchForm = () => {\n  const [Result, setSearchResult] = useState({\n    GridSearch: \"\",\n    ShowResult: false,\n    SearchResults: {},\n  });\n\n  const [SearchEquation, setSearchEquation] = useState({\n    value: \"\",\n    hidden: true,\n  });\n\n  const [AllRuns, setAllRuns] = useState({ all_runs: \"Loading\" });\n  const [SelectedRun, setSelectedRun] = useState({ selected_run: \"Loading\" });\n\n  const handleRunSelection = (run_id) => {\n    setSelectedRun(AllRuns[run_id]);\n  };\n\n  const storeSearchResults = (SearchResults) => {\n    if (SearchResults[\"grid_search\"] === true) {\n      setSearchResult({\n        GridSearch: true,\n        ShowResult: true,\n        SearchResults: SearchResults,\n      });\n    } else {\n      setSearchResult({\n        GridSearch: false,\n        ShowResult: true,\n        SearchResults: SearchResults,\n      });\n    }\n  };\n\n  const showSearchQuery = (SearchFormInput) => {\n    const CharacterRegex = /([A-Z])/;\n    var Equation = SearchFormInput.Equation;\n    for (let letter of Equation) {\n      if (CharacterRegex.test(letter)) {\n        Equation = Equation.replace(\n          letter,\n          \"(\" +\n            SearchFormInput.SearchFields[letter][\"query_key\"] +\n            \" : \" +\n            SearchFormInput.SearchFields[letter][\"query_value\"] +\n            \")\"\n        );\n      }\n    }\n    setSearchEquation({\n      value: Equation,\n      hidden: false,\n    });\n  };\n\n  const handleRunChange = (data) => {\n    const all_runs_array = {};\n    for (const key in data.all_runs) {\n      all_runs_array[data.all_runs[key].run_id] = data.all_runs[key];\n    }\n    setAllRuns(all_runs_array);\n    setSelectedRun(data.selected_run);\n  };\n\n  return (\n    <div>\n      <LastRunDiv\n        AllRuns={AllRuns}\n        SelectedRun={SelectedRun}\n        handleRunChange={handleRunChange}\n        handleRunSelection={handleRunSelection}\n      ></LastRunDiv>\n      <SearchBox\n        storeSearchResults={storeSearchResults}\n        showSearchQuery={showSearchQuery}\n        RunId={SelectedRun.run_id}\n        style={{ margin: \"10px\" }}\n      ></SearchBox>\n      <SearchQuery\n        equation={SearchEquation.value}\n        hidden={SearchEquation.hidden}\n      ></SearchQuery>\n      <ResultBox\n        searchData={Result.SearchResults}\n        showResult={Result.ShowResult}\n        GridSearch={Result.GridSearch}\n      ></ResultBox>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\nimport SearchForm from \"components/SiteSonar/SearchForm.js\";\n\nconst Dashboard = (props) => {\n  return (\n    <>\n      <div className=\"content\">\n        <SearchForm {...props} />\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\n\nimport routes from \"../routes.js\";\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <Navbar {...this.props} />\n\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\n\nvar routes = [\n  {\n    path: \"/\",\n    name: \"Site Sonar - WLCG Configuration Monitoring Tool\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.2.0\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\nimport AdminLayout from \"layouts/Admin.js\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/\" render={(props) => <AdminLayout {...props} />} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}